/*
- Aqui entram alguns conceitos que a gente aprende quando estuda orienta√ß√£o a objetos (por enquando podemos pensar que classe √© um molde e objeto √© o que sai desse molde)
  Na linha 5 estou requerendo as classes necess√°rias (de acordo com a documenta√ß√£o, ainda n√£o sei o que elas fazem/moldam) da biblioteca discord.js para dentro do arquivo index.js
*/
const { Client, Events, GatewayIntentBits } = require('discord.js')

// Aqui sequi a documenta√ß√£o para deixar o meu TOKEN protegido
const { TOKEN } = require('./config.json')

/*
- Por enquanto o que precisamos saber √© que client √© o nosso bot
- O que a gente faz na linha 16 √© transformar esse bot em algo real, no caso, num objeto
- Atrav√©s do construtor 'new' a gente constr√≥i um objeto real
- Fazendo isso, ou seja, instanciando esse objeto, podemos usar os m√©todos das classes que est√£o dispon√≠veis dentro da lib discord.js
*/
const client = new Client({ intents: [GatewayIntentBits.Guilds] })

// Aqui √© para a aparecer a mensagem "Ol√°..." uma vez (once), quando o Bot for logado, ele faz o login na linha 25!
client.once(Events.ClientReady, c => {
	console.log(`Ol√°! Sou o Bot ${c.user.tag} e fui logado ao servidor! üê∂`);
});

// Para ligar o bot, √© necess√°rio o token -> a API do Discord precisa desse token para liberar o acesso para os bots realizarem suas fun√ß√µes
client.login(TOKEN)
